/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package klient;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.ArrayList;

import org.json.simple.*;

/**
 *
 * @author Łukasz Królik
 */
public class Grafika extends javax.swing.JPanel implements KeyListener {
    
    ArrayList<Player> p;
    TCPClient cc;
    
    /**
     * Creates new form Grafika
     */
    public Grafika(ArrayList<Player> p, TCPClient cc) {
        initComponents();
        addKeyListener(this);
        setFocusable(true);
        this.p = p;
        this.cc = cc;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setPreferredSize(new java.awt.Dimension(700, 500));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public void paintComponent(Graphics g) {
        wyslijDecyzje();
        
        for (Player p : Klient.getGracze()) {
            p.newPosition(p.getX(), p.getY(), p.getKat());
            g.drawRect(0, 0, 400, 400);
            if (!p.getModulo()) {
                
                g.drawLine(p.getOldx(), p.getOldy(), p.getX(), p.getY());
            }
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void keyTyped(KeyEvent e) {

    }

    @Override
    public void keyPressed(KeyEvent e) {
        for (Player p : Klient.getGracze()) {
            if (e.getKeyCode() == p.getLewy()) {
                p.setDecyzja(20);
                System.out.println("Decyzja L !");
            }

            if (e.getKeyCode() == p.getPrawy()) {
                p.setDecyzja(-20);
                System.out.println("Decyzja P !");
            }

        }

        //To change body of generated methods, choose Tools | Templates.
    }

    
    private void wyslijDecyzje(){
        JSONArray lista = new JSONArray();
        
        for (Player p : Klient.getGracze())
        {
            lista.add(p.getDecyzja());
        }
        
        JSONObject listaDecyzji = new JSONObject();
        listaDecyzji.put("dezyzje", lista);
        
        //sending to Serwer && waiting for respond
        
    }
    
    @Override
    public void keyReleased(KeyEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
